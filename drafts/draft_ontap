new GestureDetector(
  onTap: () {
    Navigator.pushNamed(context, "myRoute");
  },
  child: new Text("my Title"),...


TextField(
            decoration: InputDecoration(
              fillColor: Theme.of(context).primaryColorLight,
              hintText: 'Найти персонажа',
              hintStyle: const TextStyle(
                color: Color.fromRGBO(91, 105, 117, 1),
              ),
              prefixIcon: Image(
                image: const AssetImage('assets/icons/find.png'),
              ),
              suffixIcon: Icon(Icons.filter_alt),
              prefix: GestureDetector(
                onTap: () {},
              ),
              suffix: GestureDetector(
                onTap: () => context.go(filter),
              ),
              enabledBorder: OutlineInputBorder(
                  borderRadius: BorderRadius.circular(25),
                  borderSide: const BorderSide(width: 1)),
            ),
          ),



final _router = GoRouter(

  initialLocation: listCharacters,
  //initialLocation: filter,
    //initialLocation: findPage,
  routes: [
    GoRoute(
      path: listCharacters,
      builder: (context, state) => ListCharacters(),
      routes: [
        GoRoute(
          path: character,
          builder: (context, state) =>
            MyCharacter(singleCreature: state.extra as creature)


        ),

      ]
    ),

    GoRoute(
      path: filter,
      builder: (context, state) => const Filter(),
    ),
    GoRoute(
      path: findPage,
      builder: (context, state) => const FindPage(),
    ),
  ],
);


